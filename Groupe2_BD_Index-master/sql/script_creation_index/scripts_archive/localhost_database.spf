<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<data>
	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
	pP7AY+WMphIT3Pax9FW5CWwaZw==
	</data>
	<key>encrypted</key>
	<true/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>CALL PENTITE("TEST")</string>
		<string>EXEC PENTITE('TEST')</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2017-12-31",1,1,1,@VID_ARTICLE);
CALL PARTICLE("2018-01-26",1,1,2,VID_ARTICLE)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITIVITE;
CREATE PROCEDURE PPOSITIVITE (IN VPOSITIVITE BOOLEAN)
BEGIN
     INSERT INTO POSITIVITE VALUES (NULL,VPOSITIVITE);
END;
CALL PPOSITIVITE(TRUE);
CALL PPOSITIVITE(FALSE)</string>
		<string>DROP PROCEDURE IF EXISTS PJOURNAL;
CREATE PROCEDURE PJOURNAL (IN VJOURNAL VARCHAR(50))
BEGIN
     INSERT INTO JOURNAL VALUES (NULL,VJOURNAL);
END;
CALL PJOURNAL("LIBERATION");
CALL PJOURNAL("FIGARO")</string>
		<string>DROP PROCEDURE IF EXISTS PCLASSIFICATION;
CREATE PROCEDURE PCLASSIFICATION (IN VCLASSE VARCHAR(50))
BEGIN
     INSERT INTO CLASSIFICATION VALUES (NULL,VCLASSE);
END;
CALL PCLASSIFICATION("SPORT");
CALL PCLASSIFICATION("HUMOUR")</string>
		<string>DROP PROCEDURE IF EXISTS PPOS_TAG;
CREATE PROCEDURE PPOS_TAGGING (IN VPOS_TAG VARCHAR(50))
BEGIN
     INSERT INTO POS_TAGGING VALUES (NULL,VPOS_TAG);
END;
CALL PPOS_TAGGING("ADVERBE");
CALL PPOS_TAGGING("SUJET")</string>
		<string>DROP PROCEDURE IF EXISTS PENTITE;
CREATE PROCEDURE PENTITE (IN VENTITE VARCHAR(50))   
BEGIN
     INSERT INTO ENTITE VALUES (NULL,VENTITE);
END;
CALL PENTITE("PERSONNE");
CALL PENTITE("LIEU")</string>
		<string>CALL PENTITE("LIEU")</string>
		<string>DROP PROCEDURE IF EXISTS PMOT;
CREATE PROCEDURE PMOT (IN VMOT VARCHAR(50), IN VRACINE VARCHAR(50), OUT VID_RACINE INT)   


BEGIN
DECLARE VID_MOT INT DEFAULT 0;

     INSERT INTO MOT VALUES (NULL,VMOT);
     
     SELECT ID_MOT INTO VID_MOT
     FROM MOT
     WHERE MOT=VMOT;

     INSERT INTO MOT_RACINE VALUES (NULL,VRACINE,VID_MOT);  

     SELECT ID_RACINE INTO VID_RACINE
     FROM MOT_RACINE
     WHERE MOT=VRACINE;

END;
CALL PMOT("VBA", "PYTHON", @ID_RACINE);
CALL PMOT("PHP", "JAVA", @ID_RACINE);
SELECT @ID_RACINE</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position_mot(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_entite FOREIGN KEY (id_entite) REFERENCES entite(id_entite);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_auteur FOREIGN KEY (id_auteur) REFERENCES auteur(id_auteur)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position_mot(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position ADD CONSTRAINT FK_position_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position_mot(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position ADD CONSTRAINT FK_position_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine);
ALTER TABLE position ADD CONSTRAINT FK_position_id_entite FOREIGN KEY (id_entite) REFERENCES entite(id_entite);
ALTER TABLE position ADD CONSTRAINT FK_position_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position ADD CONSTRAINT FK_position_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_auteur FOREIGN KEY (id_auteur) REFERENCES auteur(id_auteur)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position ADD CONSTRAINT FK_position_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine);
ALTER TABLE position ADD CONSTRAINT FK_position_id_entite FOREIGN KEY (id_entite) REFERENCES entite(id_entite);
ALTER TABLE position ADD CONSTRAINT FK_position_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position ADD CONSTRAINT FK_position_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_auteur FOREIGN KEY (id_auteur) REFERENCES auteur(id_auteur)</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2018-01-26",1,1,2,@VID_ARTICLE);
SELECT @VID_ARTICLE</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2018-01-26",1,1,2,VID_ARTICLE)</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2017-12-31",1,1,1,@VID_ARTICLE);
-- CALL PARTICLE("01-01-2018",1,1,2,VID_ARTICLE);
SELECT @VID_ARTICLE</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,STR_TO_DATE(VDATE_PUBLICATION,'%d-%m-%Y'),VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("31-12-2017",1,1,1,@VID_ARTICLE);
CALL PARTICLE("01-01-2018",1,1,2,VID_ARTICLE)</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.20</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
